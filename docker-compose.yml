version: '3.7'

services:

  # Node container
  admin:
    container_name: "${APP_NAME}-admin"
    build:
      context: .
      dockerfile: "config/docker/Dockerfile-node"
    labels:
      - traefik.enable=false
#      - traefik.docker.network=apiopenstudio_docker_dev_api_network
#      - traefik.http.routers.admin.rule=Host(`${ADMIN_SUBDOMAIN}.${DOMAIN}`)
#      - traefik.http.routers.admin.tls=true
#      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=http
    ports:
      - "8081:8080"
    volumes:
      - ${ADMIN_CODEBASE}:/app:rw
    networks:
      - default

  # NGINX API server.
  api:
    image: nginx:stable
    container_name: "${APP_NAME}-api"
    ports:
      - "8082:80"
    volumes:
      - ./config/nginx/api.conf:/etc/nginx/conf.d/default.conf:ro
      - ${API_CODEBASE}:/var/www/html:rw
    depends_on:
      - php
    labels:
      - traefik.enable=true
      - traefik.docker.network=apiopenstudio_docker_dev_api_network
      - traefik.http.routers.api.rule=Host(`${API_SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.api.tls=true
#      - traefik.http.services.api.loadbalancer.server.port=80
    networks:
      - default

  # Reverse Proxy.
  traefik:
    image: "traefik:${TRAEFIK_VERSION}"
    container_name: "${APP_NAME}-traefik"
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.file.directory=/etc/traefik/dynamic_conf
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/proxy/static.yml:/etc/traefik/traefik.yml:ro
      - ./config/proxy/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./config/certs/_wildcard.apiopenstudio.local+3.pem:/etc/certs/apiopenstudio.local.pem:ro
      - ./config/certs/_wildcard.apiopenstudio.local+3-key.pem:/etc/certs/apiopenstudio.local-key.pem:ro
    networks:
      - default

  # Install composer requires.
  composer:
    # image: composer:2.1.11 # Use for PHP 8.0
    # image: composer:2.4.3 # Use for PHP 8.1
    image: composer:latest # Use for PHP 8.2
    container_name: "${APP_NAME}-composer"
    ports:
      - "9002:9000"
    volumes:
      - ${API_CODEBASE}:/app
    command: bash -c "composer install"
    networks:
      - default

  # Database container.
  db:
    image: mariadb:latest
    container_name: "${APP_NAME}-db"
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    env_file:
      .env
    restart: always
    labels:
      - traefik.enable=false
    networks:
      - default

  # Generic PHP container.
  php:
    container_name: "${APP_NAME}-php"
    build:
      context: .
      dockerfile: "config/docker/Dockerfile-${PHP_VERSION}"
      args:
        - WITH_MEMCACHED=${WITH_MEMCACHED}
        - WITH_REDIS=${WITH_REDIS}
    links:
      - db:mysql
    env_file:
      .env
    restart: always
    labels:
      - traefik.enable=false
    ports:
      - "9001:9000"
    volumes:
      - ${API_CODEBASE}:/var/www/html:rw
      - ./logs/apiopenstudio:/var/log/apiopenstudio:rw
    networks:
      - default

#  # Uncomment this to create a Redis server for caching.
#  # Redis cache server
#  redis:
#    image: redis/redis-stack:latest
#    container_name: "${APP_NAME}-redis"
#    ports:
#      - "6379:6379"
#      - "8001:8001"
#    networks:
#      - default

#  # Uncomment this to create a Memcached server for caching.
#  # Memcached server
#  memcached:
#    image: memcached:latest
#    container_name: "${APP_NAME}-memcached"
#    ports:
#      - "11211:11211"
#    command: -m 64
#    networks:
#      - default

  # Uncomment this for compiling and serving the phpdoc API.
  # PhpDoc container.
  phpdocumentor:
    image: phpdoc/phpdoc:latest
    platform: linux/amd64
    container_name: "${APP_NAME}-phpdocumentor"
    volumes:
      - ${API_CODEBASE}:/data
    command:
      "run -d ./ -t ./public/phpdoc/ --title='PHPDoc'"
    networks:
      - default

  # NGINX PHPDoc server.
  phpdoc:
    image: nginx:stable
    container_name: "${APP_NAME}-phpdoc"
    ports:
      - "8083:80"
    volumes:
      - ${API_CODEBASE}/public/phpdoc:/var/www/html
      - ./config/nginx/phpdoc.conf:/etc/nginx/conf.d/default.conf
    labels:
      - traefik.enable=true
      - traefik.docker.network=apiopenstudio_docker_dev_api_network
      - traefik.http.routers.nginx.rule=Host(`${PHPDOC_SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.nginx.tls=true
    networks:
      - default

volumes:
  dbdata:

networks:
  default:
    driver: bridge


